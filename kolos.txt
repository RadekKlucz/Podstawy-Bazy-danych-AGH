---------------------------------------------------------------
SKLADNIA
---------------------------------------------------------------

DECLARE @zmienna INT // deklarowanie zmiennej 

SET @zmienna = (SELECT CategoryID FROM Categories WHERE CategoryName = 'Meat/Poultry') // ustawianie wartosci zmiennej

SELECT [ALL | DISTINCT] <select_list or column> 
FROM {<table_source>} [,…n] 
WHERE <search_condition>;  // w warunkach uwazac na wielkosc liter 

Operatory porównań: =,>,<,>=,<=,<>

$ USE Northwind SELECT ProductName, UnitPrice FROM Products WHERE UnitPrice >= 20 AND UnitPrice <= 30;

Porównywanie napisów: LIKE, NOT LIKE


Operatory logiczne: łączenie warunków AND, OR

$ SELECT ProductName, UnitPrice FROM Ccustomers WHERE Country = 'France' OR Country = 'Spain';

Operator logiczny: negacja NOT

Zakres wartości: BETWEEN, NOT BETWEEN

$ SELECT ProductName, UnitPrice FROM Products WHERE UnitPrice BETWEEN 20 AND 30;

Listy wartości: IN, NOT IN

$ SELECT ProductName, UnitPrice FROM Customers WHERE Country IN ('France', 'Spain'); // krotsza wersja powyzszego

Nieznane wartości: IS NULL, IS NOT NULL

Nawiasy




---------------------------------------------------------------
KURS SQL
---------------------------------------------------------------
Krótki rzut oka na nomenklaturę podstawowych obiektów bazodanowe w różnych terminologiach. Od czystej teorii – do wdrożenia.

Teoria relacyjna	Model ER	Relacyjne bazy	Aplikacje
Relacja	            Encja	    Tabela	        Klasa
Krotka	            Instancja	Wiersz	        Instancja klasy (obiekt)
Atrybut	            Atrybut	    Kolumna	        Właściwość, atrybut
Dziedzina	        Dziedzina/Typ	Typ danych	Typ danych

RELACYJNA BAZA DANYCH
Zgodnie z modelem E-R, to zbiór schematów RELACJI i ZWIĄZKÓW między nimi. 
Czyli struktur służących do przechowywania danych w ściśle zorganizowany sposób.

W praktyce będzie to zawsze zbiór tabel, w których przechowywane są dane. 
Ponadto tabele, posiadać będą określone powiązania (relacje) między sobą.

RELACJA
W modelu E-R, to po prostu TABELA czyli struktura, przechowująca informacje o obiektach określonego typu. 
Używając języka programistów – KLASA obiektów określonego typu.

ATRYBUT
Każda RELACJA jest opisana za pomocą zbioru ATRYBUTÓW. 
Warto dodać że ten zbiór powinien być zawsze minimalny, niezbędny do realizacji celów biznesowych.

ATRYBUT w praktyce, to nic innego jako KOLUMNA. Zatem tłumacząc na model relacyjny, każda TABELA opisana jest za pomocą zbioru KOLUMN. 
Każda KOLUMNA jest ściśle określona TYPEM DANYCH, czyli przechowuje wartości jednorodne, z określonej DZIEDZINY 

SCHEMAT RELACJI
To po prostu jej definicja. Czyli informacja o strukturze, ATRYBUTACH które opisują daną RELACJĘ.

W praktyce będzie to struktura tabeli – czyli informacja przez jakie kolumny, jakiego typu jest ona opisana.

KROTKA
To pojedynczy egzemplarz, czyli obiekt opisany wszystkimi ATRYBUTAMI danej RELACJI. KROTKA to nic innego jak WIERSZ czy REKORD. 
W języku programistów możemy mówić o EGZEMPLARZU danej KLASY.

KLUCZE
Klucze to zbiory atrybutów mających określoną właściwość. Dzięki nim, możemy jednoznacznie identyfikować każdy pojedynczy wiersz. 
Znajomość pojęć kluczy podstawowych i obcych jest niezbędna do tworzenia zapytań, odwołujących się do wielu tabel. 
Możesz się spotkać z następującymi pojęciami typów kluczy :

SUPERKLUCZ (NADKLUCZ)
Superkluczem nazywamy dowolny podzbiór atrybutów, identyfikujący jednoznacznie każdy wiersz. Każda RELACJA (tabela) może zawierać wiele takich kluczy. 
Szczególnym przypadkiem jest superklucz składający się ze wszystkich atrybutów (kolumn) danej tabeli.

KLUCZ KANDYDUJĄCY
To dowolny z SUPERKLUCZY, mogący zostać kluczem podstawowym. W implementacji bazy danych, w praktyce nie istnieje jako niezależny osobny (zmaterializowany byt) jako taki. 
Jest to tylko założenie teoretyczne.

KLUCZ PODSTAWOWY (PRIMARY KEY)
To wybrany (zazwyczaj najkrótszy), jednoznacznie identyfikujący każdy, pojedynczy wiersz, zbiór atrybutów (kolumn) danej relacji (tabeli). 
Jest to pierwszy z wymienionych do tej pory kluczy, któy ma faktyczne, fizyczne odwzorowania w implementacji bazy danych. Każda tabela może mieć tylko jeden taki klucz.

W praktyce, będzie to najczęściej jedna lub dwie kolumny w tabeli, jednoznacznie (UNIKALNIE) identyfikujący każdy wiersz. 
Nie można stworzyć klucza podstawowego, na zbiorze atrybutów nieunikalnych. Dwa wiersze nie mogą mieć takiej samej wartości klucza podstawowego.
KLUCZ OBCY
To atrybut lub zbiór atrybutów, wskazujący na KLUCZ GŁÓWNY w innej RELACJI (tabeli). Klucz obcy to nic innego jak związek, relacja między dwoma tabelami.


